{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Running Rhino3D on Linux","text":"<p>A practical guide for running Rhino3D through Wine</p> <p></p>"},{"location":"#why-this-guide-exists","title":"Why This Guide Exists","text":"<p>The landscape of professional computing is changing. With growing concerns about operating system privacy, forced updates, and user autonomy, many designers and architects are looking to Linux. Rhino - a critical tool for many of us - has historically been a blocker for this transition. This guide provides tested, working solutions for running Rhino on Linux systems.</p>"},{"location":"#what-works","title":"What Works","text":"<p>Through careful testing and refinement of Wine configurations, I've developed reliable methods to run Rhino (particularly version 7) on Linux. While not officially supported by McNeel, these methods are working for real production use in studios and workshops worldwide.</p>"},{"location":"#what-to-expect","title":"What To Expect","text":"<p>This isn't a perfect 1:1 replacement for running Rhino on Windows. You'll encounter: - Some UI quirks that need specific workarounds - Slightly longer startup times - Occasional viewport refresh issues - Limited GPU rendering support</p> <p>However, core functionality - including Grasshopper - works reliably once properly configured.</p>"},{"location":"#before-you-begin","title":"Before You Begin","text":"<ul> <li>These guides assume basic familiarity with Linux command line operations</li> <li>You'll need to be comfortable following technical instructions precisely</li> <li>Having a backup workflow (like a Windows VM) during transition is recommended</li> <li>Different distros require slightly different approaches - follow the guide specific to yours</li> </ul>"},{"location":"#a-note-about-support","title":"A Note About Support","text":"<p>While McNeel has been supportive of users running Rhino on Wine, this is not an officially supported configuration. The solutions presented here come from extensive testing and refinement. When you encounter issues, please open an issue in this repository.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>This is an open project and contributions are welcome. If you find improvements or solutions for different distributions, please consider submitting a pull request.</p>"},{"location":"#distribution-specific-guides","title":"Distribution-Specific Guides","text":"<ul> <li>Debian-based Installation</li> <li>Arch Linux Installation</li> </ul>"},{"location":"#directory-structure","title":"Directory Structure","text":"<pre><code>rhino-wine/\n\u251c\u2500\u2500 README.md (this file)\n\u251c\u2500\u2500 guides/\n\u2502   \u251c\u2500\u2500 rhino-debian.md\n\u2502   \u251c\u2500\u2500 rhino-arch.md\n\u2502   \u2514\u2500\u2500 media/\n\u251c\u2500\u2500 media/\n\u2502   \u2514\u2500\u2500 rhino-wine.png\n\u2514\u2500\u2500 scripts/\n</code></pre>"},{"location":"#tested-configurations","title":"Tested Configurations","text":"<p>Currently tested and working combinations:</p> Distro Wine Version Rhino Version Status Ubuntu 22.04 9.20 Rhino 7 \u2705 Working Arch Linux 6.12.1-arch1-1 9.20 Rhino 7 \u2705 Working"},{"location":"#license","title":"License","text":"<p>GNU GENERAL PUBLIC LICENSE (see in repo)</p>"},{"location":"guides/rhino-arch/","title":"Install Rhino 7 on Arch Linux using Wine 9.20 (Staging)","text":"<p>\u26a0This assumes a non-existent wine prefix or even a wine installation. If you have an existing wine prefix there may be things that interfere with this guide.</p> <ul> <li>[ ] Start by installing wine and required dependencies. We'll use both official repos and AUR:</li> </ul> <pre><code># Install wine and basic dependencies from official repos\nsudo pacman -S wine wine-gecko wine-mono winetricks\n\n# Install additional dependencies from AUR (using yay)\nyay -S wine-staging\n</code></pre> <ul> <li>[ ] Initialize your default Wine environment (which will be located under ~/.wine)</li> </ul> <pre><code>wineboot -u\n</code></pre> <ul> <li>[ ] Install gecko browser for wine (required for license config to work)</li> </ul> <pre><code>mkdir -p ~/.cache/wine\ncd ~/.cache/wine\nwget http://dl.winehq.org/wine/wine-gecko/2.47.2/wine-gecko-2.47.2-x86_64.msi\nwget http://dl.winehq.org/wine/wine-gecko/2.47.2/wine-gecko-2.47.2-x86.msi\nwineboot\n</code></pre> <ul> <li>[ ] Various winetricks commands will log a lot of errors and warnings and yet still work. (Task Failed Successfully?) so don't get too worried</li> </ul> <pre><code>winetricks --force dotnet48\n</code></pre> <ul> <li>[ ] Click \"restart now\" when prompted</li> <li>[ ] Kill all existing wine services so reg server doesn't get messed up.</li> </ul> <pre><code>kill -9 $(ps aux | grep -i '\\.exe' | awk '{print $2}' | tr '\\n' ' ')\n</code></pre> <ul> <li>[ ] Install needed fonts. (The missing fonts seem to be a common cause of Rhino crashes on Wine)</li> </ul> <pre><code>winetricks allfonts\n</code></pre> <ul> <li>[ ] Install additional required libraries</li> </ul> <pre><code>winetricks vkd3d dxvk gdiplus\n</code></pre> <ul> <li>[ ] Set offscreen rendering to backbuffer</li> </ul> <pre><code>winetricks orm=backbuffer\n</code></pre> <ul> <li>[ ] Force wine to appear as Windows 11 (required for compatibility)</li> </ul> <p>Sometimes this hangs, so control-c to break back to terminal prompt if necessary.</p> <pre><code>wine winecfg -v win11\n</code></pre> <p>The only libraries in Wine Configuration (winecfg) should be the following:</p> <ol> <li>*gdiplus (native)</li> <li>*mscoree (native)</li> </ol> <p>No other libraries should be present</p> <ul> <li>[ ] Navigate to libraries and verify the configuration</li> </ul> <pre><code>winecfg\n</code></pre> <ul> <li>[ ] Set renderer to gdi - although Rhino still uses gpu acceleration? this part is magic \u2728</li> </ul> <pre><code>winetricks renderer=gdi\n</code></pre> <ul> <li>[ ] \ud83d\udd2a Kill all existing remaining wine processes</li> </ul> <pre><code>kill -9 $(ps aux | grep -i '\\.exe' | awk '{print $2}' | tr '\\n' ' ')\n</code></pre> <ul> <li>[ ] Download latest Rhino 7 installer and run it. (Filename might change here)</li> </ul> <pre><code>wine ~/Downloads/rhino_en-us_7.24.22308.15001.exe\n</code></pre> <ul> <li>[ ] Installer will appear to exit, but it won't actually - it leaves the installer stub and main installer running</li> <li>[ ] \ud83d\udd2a Kill all remaining wine processes again. Do this from another terminal window if needed</li> </ul> <pre><code>kill -9 $(ps aux | grep -i '\\.exe' | awk '{print $2}' | tr '\\n' ' ')\n</code></pre> <ul> <li> <p>[ ] Before starting Rhino for the first time, there are some additional compatibility fixes that may be needed:</p> </li> <li> <p>If you see black tooltips, you can fix this in one of two ways:</p> </li> <li>Open Wine Configuration (winecfg), go to Desktop Integration tab, and in Theme dropdown, select (No theme)</li> <li> <p>Or run this command:    <pre><code>reg add 'HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\ThemeManager' /v ThemeActive /t REG_SZ /d 0 /f\n</code></pre></p> </li> <li> <p>If Rhino opens but windows are all black or fail to be drawn (OpenGL issue), fix it by changing Wine's Direct3D renderer:    <pre><code>reg add 'HKEY_CURRENT_USER\\Software\\Wine\\Direct3D' /v renderer /t REG_SZ /d vulkan /f\n</code></pre>    Note: Valid renderer values are: gl, vulkan, gdi, no3d. Vulkan typically has the least artifacts.</p> </li> <li> <p>[ ] A Rhino 7 shortcut should appear on your desktop, you can use that link to start it after finishing this process</p> </li> <li>[ ] Change to installed Rhino directory and run rhino</li> </ul> <pre><code>cd ~/.wine/drive_c/Program\\ Files/Rhino\\ 7/System\nwine rhino.exe\n</code></pre> <ul> <li>[ ] First time running rhino.exe brings up the installer dialog (asking to reinstall or repair). Close the dialog box with the upper right X. The web-based license process will then proceed.</li> <li>[ ] Type your email in and log in via your regular web browser</li> </ul> <p>The license service is listening on tcp:1717 for the authorization string - depending on your system configuration (firewall), the request url to authorize the license will be an http on loopback tcp:1717, so that traffic needs to be allowed.</p> <ul> <li>[ ] Answer/dismiss the usage tracking dialog</li> <li>[ ] Run Grasshopper from within Rhino and select any example document to start it</li> <li>[ ] Grasshopper font mapper will announce that Segoe Print is not available. Confirm the suggested alternative, Tahoma</li> </ul> <p>Now, use Rhino! Save your work often, this isn't a supported configuration and it could crash in unexpected ways. From this point, I have been using Rhino for some projects that aren't exotic - default out of the box features. It works without much drama.</p> <p>You might want to change your UI DPI in winecfg (I brought mine up to 133 DPI for my 4K monitor), and definitely experiment with customizing the settings in UI and font to your taste.</p>"},{"location":"guides/rhino-arch/#notes-and-ideas","title":"Notes and Ideas","text":"<p>Using wine 9.20, I can use vulkan, gl, gdi, or no3d. They all appear to have similar performance and all seem to use the gpu for in-UI viewport rendering. Using any other renderers causes various interface artifacts such as black regions around some dialog and UI elements. Currently it seems using Vulkan has the least artifacts when using the application.</p> <p>Wine-staging has less overall glitchy behavior such as viewport refresh issues.</p> <p>For NVIDIA users, while CUDA support can be installed via <code>sudo pacman -S cuda</code>, Rhino does not currently detect CUDA capability passed through wine-staging, even though staging has better CUDA support.</p> <p>Render command seems fairly broken. Doesn't matter if it's new render or old render method. Render UI has black button regions and other artifacts.</p>"},{"location":"guides/rhino-arch/#todo","title":"Todo","text":"<ul> <li>[x] Get vulkan renderer to work</li> <li>[ ] Get some sort of acceleration for cycles so rendering is useful</li> <li>[ ] Get the auto updater to auto update reliably</li> </ul>"},{"location":"guides/rhino-arch/#arch-specific-notes","title":"Arch-specific Notes","text":"<ul> <li>If you encounter any font-related issues, ensure you have <code>ttf-ms-fonts</code> installed from the AUR: <code>yay -S ttf-ms-fonts</code></li> <li>For better gaming/3D performance, consider installing <code>gamemode</code> and <code>lib32-gamemode</code>: <code>sudo pacman -S gamemode lib32-gamemode</code></li> <li>If you experience any graphics issues, ensure you have the appropriate graphics drivers installed:</li> <li>For NVIDIA: <code>sudo pacman -S nvidia nvidia-utils lib32-nvidia-utils</code></li> <li>For AMD: <code>sudo pacman -S mesa lib32-mesa xf86-video-amdgpu vulkan-radeon lib32-vulkan-radeon</code></li> <li>For Intel: <code>sudo pacman -S mesa lib32-mesa vulkan-intel lib32-vulkan-intel</code></li> </ul>"},{"location":"guides/rhino-debian/","title":"Install Rhino 7 on Ubuntu based OS (KDE on Ubuntu Noble) using Wine 9.20 (Staging)","text":"<p>\u26a0This assumes a non-existent wine prefix or even a wine installation. If you have an existing wine prefix there may be things that interfere with this guide.</p> <ul> <li>[ ] Start by installing wine and required dependencies:</li> </ul> <pre><code>sudo apt install wine wine32 winetricks mono-complete winbind\n</code></pre> <ul> <li>[ ] Initialize your default Wine environment (which will be located under ~/.wine)</li> </ul> <pre><code>wineboot -u\n</code></pre> <ul> <li>[ ] Install gecko browser for wine (required for license config to work)</li> </ul> <pre><code>mkdir -p ~/.cache/wine\ncd ~/.cache/wine\nwget http://dl.winehq.org/wine/wine-gecko/2.47.2/wine-gecko-2.47.2-x86_64.msi\nwget http://dl.winehq.org/wine/wine-gecko/2.47.2/wine-gecko-2.47.2-x86.msi\nwineboot\n</code></pre> <ul> <li>[ ] Various winetricks commands will log a lot of errors and warnings and yet still work. (Task Failed Successfully?) so don't get too worried</li> </ul> <pre><code>winetricks --force dotnet48\n</code></pre> <ul> <li>[ ] Click \"restart now\" when prompted</li> <li>[ ] Kill all existing wine services so reg server doesn't get messed up.</li> </ul> <pre><code>kill -9 $(ps aux | grep -i '\\.exe' | awk '{print $2}' | tr '\\n' ' ')\n</code></pre> <ul> <li>[ ] Install needed fonts. (The missing fonts seem to be a common cause of Rhino crashes on Wine)</li> </ul> <pre><code>winetricks allfonts\n</code></pre> <ul> <li>[ ] Install additional required libraries</li> </ul> <pre><code>winetricks vkd3d dxvk gdiplus\n</code></pre> <ul> <li>[ ] Set offscreen rendering to backbuffer</li> </ul> <pre><code>winetricks orm=backbuffer\n</code></pre> <ul> <li>[ ] Force wine to appear as Windows 11 (required for compatibility)</li> </ul> <p>Sometimes this hangs, so control-c to break back to terminal prompt if necessary.</p> <pre><code>wine winecfg -v win11\n</code></pre> <p>The only libraries in Wine Configuration (winecfg) should be the following:</p> <ol> <li>*gdiplus (native)</li> <li>*mscoree (native)</li> </ol> <p>No other libraries should be present</p> <ul> <li>[ ] Navigate to libraries and verify the configuration</li> </ul> <pre><code>winecfg\n</code></pre> <ul> <li>[ ] Set renderer to gdi - although Rhino still uses gpu acceleration? this part is magic \u2728</li> </ul> <pre><code>winetricks renderer=gdi\n</code></pre> <ul> <li>[ ] \ud83d\udd2a Kill all existing remaining wine processes</li> </ul> <pre><code>kill -9 $(ps aux | grep -i '\\.exe' | awk '{print $2}' | tr '\\n' ' ')\n</code></pre> <ul> <li>[ ] Download latest Rhino 7 installer and run it. (Filename might change here)</li> </ul> <pre><code>wine ~/Downloads/rhino_en-us_7.24.22308.15001.exe\n</code></pre> <ul> <li>[ ] Installer will appear to exit, but it won't actually - it leaves the installer stub and main installer running</li> <li>[ ] \ud83d\udd2a Kill all remaining wine processes again. Do this from another terminal window if needed</li> </ul> <pre><code>kill -9 $(ps aux | grep -i '\\.exe' | awk '{print $2}' | tr '\\n' ' ')\n</code></pre> <ul> <li> <p>[ ] Before starting Rhino for the first time, there are some additional compatibility fixes that may be needed:</p> </li> <li> <p>If you see black tooltips, you can fix this in one of two ways:</p> </li> <li>Open Wine Configuration (winecfg), go to Desktop Integration tab, and in Theme dropdown, select (No theme)</li> <li> <p>Or run this command:    <pre><code>reg add 'HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\ThemeManager' /v ThemeActive /t REG_SZ /d 0 /f\n</code></pre></p> </li> <li> <p>If Rhino opens but windows are all black or fail to be drawn (OpenGL issue), fix it by changing Wine's Direct3D renderer:    <pre><code>reg add 'HKEY_CURRENT_USER\\Software\\Wine\\Direct3D' /v renderer /t REG_SZ /d vulkan /f\n</code></pre>    Note: Valid renderer values are: gl, vulkan, gdi, no3d. Vulkan typically has the least artifacts.</p> </li> <li> <p>[ ] A Rhino 7 shortcut should appear on your desktop, you can use that link to start it after finishing this process</p> </li> <li>[ ] Change to installed Rhino directory and run rhino</li> </ul> <pre><code>cd ~/.wine/drive_c/Program\\ Files/Rhino\\ 7/System\nwine rhino.exe\n</code></pre> <ul> <li>[ ] First time running rhino.exe brings up the installer dialog (asking to reinstall or repair). Close the dialog box with the upper right X. The web-based license process will then proceed.</li> <li>[ ] Type your email in and log in via your regular web browser</li> </ul> <p>The license service is listening on tcp:1717 for the authorization string - depending on your system configuration (firewall), the request url to authorize the license will be an http on loopback tcp:1717, so that traffic needs to be allowed.</p> <ul> <li>[ ] Answer/dismiss the usage tracking dialog</li> <li>[ ] Run Grasshopper from within Rhino and select any example document to start it</li> <li>[ ] Grasshopper font mapper will announce that Segoe Print is not available. Confirm the suggested alternative, Tahoma</li> </ul> <p>Now, use Rhino! Save your work often, this isn't a supported configuration and it could crash in unexpected ways. From this point, I have been using Rhino for some projects that aren't exotic - default out of the box features. It works without much drama.</p> <p>You might want to change your UI DPI in winecfg (I brought mine up to 133 DPI for my 4K monitor), and definitely experiment with customizing the settings in UI and font to your taste.</p>"},{"location":"guides/rhino-debian/#notes-and-ideas","title":"Notes and Ideas","text":"<p>Using wine 9.20 I can use vulkan, gl, gdi, or no3d. They all appear to have similar performance and all seem to use the gpu for in-UI viewport rendering. Using any other renderers causes various interface artifacts such as black regions around some dialog and UI elements. Currently it seems using Vulkan has the least artifacts when using the application.</p> <p>Wine-staging has less overall glitchy behavior such as viewport refresh issues.</p> <p>For NVIDIA users, while CUDA support can be installed, Rhino does not currently detect CUDA capability passed through wine-staging, even though staging has better CUDA support.</p> <p>Render command seems fairly broken. Doesn't matter if it's new render or old render method. Render UI has black button regions and other artifacts.</p>"},{"location":"guides/rhino-debian/#todo","title":"Todo","text":"<ul> <li>[x] Get vulkan renderer to work</li> <li>[ ] Get some sort of acceleration for cycles so rendering is useful</li> <li>[ ] Get the auto updater to auto update reliably</li> </ul>"},{"location":"guides/rhino-debian/#ubuntu-specific-notes","title":"Ubuntu-specific Notes","text":"<ul> <li>If you experience any graphics issues, ensure you have the appropriate graphics drivers installed:</li> <li>For NVIDIA: <code>sudo apt install nvidia-driver-xxx</code> (replace xxx with latest version)</li> <li>For AMD: <code>sudo apt install mesa-vulkan-drivers vulkan-tools</code></li> <li>For Intel: <code>sudo apt install mesa-vulkan-drivers vulkan-tools</code></li> <li>For better gaming/3D performance, consider installing GameMode: <code>sudo apt install gamemode</code></li> </ul>"},{"location":"guides/setup-scripts/","title":"Setup Scripts","text":"<p>This guide provides information about the automated setup scripts for installing Rhino 7 on Arch Linux and Debian-based systems.</p>"},{"location":"guides/setup-scripts/#overview","title":"Overview","text":"<p>The setup scripts automate the installation process described in the manual installation guides. They handle the installation of dependencies, Wine configuration, and optional graphics driver installation.</p>"},{"location":"guides/setup-scripts/#prerequisites","title":"Prerequisites","text":"<ul> <li>For Arch Linux:</li> <li><code>pacman</code> package manager (comes with Arch)</li> <li><code>yay</code> AUR helper installed</li> <li> <p>Root privileges (sudo access)</p> </li> <li> <p>For Debian/Ubuntu:</p> </li> <li><code>apt</code> package manager (comes with Debian/Ubuntu)</li> <li>Root privileges (sudo access)</li> </ul>"},{"location":"guides/setup-scripts/#usage","title":"Usage","text":"<ol> <li>Download the appropriate script for your system:</li> <li>For Arch Linux: <code>setup-rhino7-arch.sh</code></li> <li> <p>For Debian/Ubuntu: <code>setup-rhino7-debian.sh</code></p> </li> <li> <p>Make the script executable:    <pre><code>chmod +x setup-rhino7-arch.sh   # For Arch Linux\n# OR\nchmod +x setup-rhino7-debian.sh # For Debian/Ubuntu\n</code></pre></p> </li> <li> <p>Run the script:    <pre><code>./setup-rhino7-arch.sh   # For Arch Linux\n# OR\n./setup-rhino7-debian.sh # For Debian/Ubuntu\n</code></pre></p> </li> <li> <p>Follow the prompts during script execution:</p> </li> <li>The script will ask if you want to install graphics drivers</li> <li>If yes, select your graphics card type (NVIDIA, AMD, or Intel)</li> <li>For NVIDIA on Debian/Ubuntu, you'll need to specify the driver version</li> </ol>"},{"location":"guides/setup-scripts/#what-the-scripts-do","title":"What the Scripts Do","text":"<p>The setup scripts perform the following tasks:</p> <ol> <li>Check for the appropriate package manager</li> <li>Install Wine and required dependencies</li> <li>Initialize Wine environment</li> <li>Install Wine Gecko</li> <li>Install .NET 4.8</li> <li>Install required fonts</li> <li>Install additional libraries (vkd3d, dxvk, gdiplus)</li> <li>Configure Wine settings</li> <li>Set up Direct3D renderer</li> <li>Configure theme settings for tooltip compatibility</li> <li>Install gaming performance tools (GameMode)</li> <li>Optionally install graphics drivers</li> </ol>"},{"location":"guides/setup-scripts/#after-setup","title":"After Setup","text":"<p>Once the script completes successfully:</p> <ol> <li>Download Rhino 7 installer</li> <li>Run the installer using Wine:    <pre><code>wine ~/Downloads/rhino_en-us_7.24.22308.15001.exe\n</code></pre></li> <li>Follow the Rhino installation process</li> <li>Complete the licensing process</li> </ol>"},{"location":"guides/setup-scripts/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues:</p> <ol> <li>Check the terminal output for error messages</li> <li>Ensure all prerequisites are met</li> <li>Verify your system meets the minimum requirements for Rhino 7</li> <li>Make sure you have a stable internet connection during setup</li> </ol> <p>For specific issues:</p> <ul> <li>If Wine processes don't terminate properly, you can manually kill them:   <pre><code>kill -9 $(ps aux | grep -i '\\.exe' | awk '{print $2}' | tr '\\n' ' ')\n</code></pre></li> <li>If the graphics don't work correctly after installation, try changing the Direct3D renderer:   <pre><code>reg add 'HKEY_CURRENT_USER\\Software\\Wine\\Direct3D' /v renderer /t REG_SZ /d vulkan /f\n</code></pre></li> </ul>"},{"location":"guides/setup-scripts/#notes","title":"Notes","text":"<ul> <li>The scripts are designed to work with the latest versions of Arch Linux and Debian/Ubuntu</li> <li>Some commands may produce warnings or errors but still complete successfully</li> <li>The setup process may take significant time, especially during .NET 4.8 installation</li> <li>Save any work before running the scripts as they may require system restarts</li> </ul>"}]}